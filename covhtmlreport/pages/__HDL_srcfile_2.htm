
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a><q-m>// mapped needs this</q-m>
<a name="2"><q-n>     2  </q-n></a>`<q-i>include</q-w> <q-l>"alu_if.vh"</q-l>
<a name="3"><q-n>     3  </q-n></a>`<q-i>include</q-w> <q-l>"cpu_types_pkg.vh"</q-l>
<a name="4"><q-n>     4  </q-n></a>
<a name="5"><q-n>     5  </q-n></a><q-w>import</q-w> cpu_types_pkg::*;
<a name="6"><q-n>     6  </q-n></a>
<a name="7"><q-n>     7  </q-n></a><q-m>// mapped timing needs this. 1ns is too fast</q-m>
<a name="8"><q-n>     8  </q-n></a>`<q-a>timescale</q-w> 1 <q-v>ns</q-w> / 1 <q-v>ns</q-w>
<a name="9"><q-n>     9  </q-n></a>
<a name="10"><q-n>     10  </q-n></a><q-w>module</q-w> alu_tb;
<a name="11"><q-n>     11  </q-n></a>
<a name="12"><q-n>     12  </q-n></a>  <q-w>parameter</q-w> PERIOD = 10;
<a name="13"><q-n>     13  </q-n></a>
<a name="14"><q-n>     14  </q-n></a>  <q-w>logic</q-w> CLK = 0;
<a name="15"><q-n>     15  </q-n></a>
<a name="16"><q-n>     16  </q-n></a>  <q-m>// clock</q-m>
<a name="17"><q-n>     17  </q-n></a>  <q-w>always</q-w> #(PERIOD/2) CLK++;
<a name="18"><q-n>     18  </q-n></a>
<a name="19"><q-n>     19  </q-n></a>  <q-m>// interface</q-m>
<a name="20"><q-n>     20  </q-n></a>  alu_if aluif ();
<a name="21"><q-n>     21  </q-n></a>  <q-m>// test program</q-m>
<a name="22"><q-n>     22  </q-n></a>  test PROG (.CLK(CLK), .tbif(aluif));
<a name="23"><q-n>     23  </q-n></a>  <q-m>// DUT</q-m>
<a name="24"><q-n>     24  </q-n></a>`ifndef MAPPED
<a name="25"><q-n>     25  </q-n></a>  alu DUT(aluif);
<a name="26"><q-n>     26  </q-n></a>`<q-w>else</q-w>
<a name="27"><q-n>     27  </q-n></a>  alu DUT(
<a name="28"><q-n>     28  </q-n></a>    .\aluif.negative (aluif.negative),
<a name="29"><q-n>     29  </q-n></a>    .\aluif.zero (aluif.zero),
<a name="30"><q-n>     30  </q-n></a>    .\aluif.overflow (aluif.overflow),
<a name="31"><q-n>     31  </q-n></a>    .\aluif.aluop (aluif.aluop),
<a name="32"><q-n>     32  </q-n></a>    .\aluif.portA (aluif.portA),
<a name="33"><q-n>     33  </q-n></a>    .\aluif.portB (aluif.portB),
<a name="34"><q-n>     34  </q-n></a>    .\aluif.outputPort (aluif.outputPort)
<a name="35"><q-n>     35  </q-n></a>  );
<a name="36"><q-n>     36  </q-n></a>`<q-a>endif</q-w>
<a name="37"><q-n>     37  </q-n></a>
<a name="38"><q-n>     38  </q-n></a><q-w>endmodule</q-w>
<a name="39"><q-n>     39  </q-n></a>
<a name="40"><q-n>     40  </q-n></a><q-m>//test cases</q-m>
<a name="41"><q-n>     41  </q-n></a><q-w>program</q-w> test(
<a name="42"><q-n>     42  </q-n></a>    <q-w>input</q-w> <q-w>logic</q-w> CLK,
<a name="43"><q-n>     43  </q-n></a>    alu_if.tb tbif
<a name="44"><q-n>     44  </q-n></a>);
<a name="45"><q-n>     45  </q-n></a>
<a name="46"><q-n>     46  </q-n></a>    <q-w>string</q-w>  tb_test_case;
<a name="47"><q-n>     47  </q-n></a>    <q-w>parameter</q-w> PERIOD = 10;
<a name="48"><q-n>     48  </q-n></a>
<a name="49"><q-n>     49  </q-n></a>    <q-w>initial</q-w> <q-w>begin</q-w>
<a name="50"><q-n>     50  </q-n></a>    <q-m>// SLL</q-m>
<a name="51"><q-n>     51  </q-n></a>    @(<q-a>posedge</q-w> CLK)
<a name="52"><q-n>     52  </q-n></a>    tb_test_case = <q-l>"SLL"</q-l>;
<a name="53"><q-n>     53  </q-n></a>    tbif.aluop = ALU_SLL;
<a name="54"><q-n>     54  </q-n></a>    tbif.portA = 32'hff;
<a name="55"><q-n>     55  </q-n></a>    tbif.portB = 32'd1;
<a name="56"><q-n>     56  </q-n></a>    #(PERIOD);
<a name="57"><q-n>     57  </q-n></a>
<a name="58"><q-n>     58  </q-n></a>    <q-m>// SRL</q-m>
<a name="59"><q-n>     59  </q-n></a>    @(<q-a>posedge</q-w> CLK)
<a name="60"><q-n>     60  </q-n></a>    tb_test_case = <q-l>"SRL"</q-l>;
<a name="61"><q-n>     61  </q-n></a>    tbif.aluop = ALU_SRL;
<a name="62"><q-n>     62  </q-n></a>    tbif.portA = 32'hff;
<a name="63"><q-n>     63  </q-n></a>    tbif.portB = 32'd1;
<a name="64"><q-n>     64  </q-n></a>    #(PERIOD);
<a name="65"><q-n>     65  </q-n></a>
<a name="66"><q-n>     66  </q-n></a>    <q-m>// ADD</q-m>
<a name="67"><q-n>     67  </q-n></a>    @(<q-a>posedge</q-w> CLK)
<a name="68"><q-n>     68  </q-n></a>    tb_test_case = <q-l>"ADD, no overflow"</q-l>;
<a name="69"><q-n>     69  </q-n></a>    tbif.aluop = ALU_ADD;
<a name="70"><q-n>     70  </q-n></a>    tbif.portA = 32'h12;
<a name="71"><q-n>     71  </q-n></a>    tbif.portB = 32'hff;
<a name="72"><q-n>     72  </q-n></a>    #(PERIOD);
<a name="73"><q-n>     73  </q-n></a>
<a name="74"><q-n>     74  </q-n></a>    @(<q-a>posedge</q-w> CLK)
<a name="75"><q-n>     75  </q-n></a>    tb_test_case = <q-l>"ADD, overflow, negative flag"</q-l>;
<a name="76"><q-n>     76  </q-n></a>    tbif.aluop = ALU_ADD;
<a name="77"><q-n>     77  </q-n></a>    tbif.portA = 32'b01000000000000000000000000000000;
<a name="78"><q-n>     78  </q-n></a>    tbif.portB = 32'b01000000000000000000000000000001;
<a name="79"><q-n>     79  </q-n></a>    #(PERIOD);
<a name="80"><q-n>     80  </q-n></a>
<a name="81"><q-n>     81  </q-n></a>    <q-m>// SUB</q-m>
<a name="82"><q-n>     82  </q-n></a>    @(<q-a>posedge</q-w> CLK)
<a name="83"><q-n>     83  </q-n></a>    tb_test_case = <q-l>"SUB, no overflow"</q-l>;
<a name="84"><q-n>     84  </q-n></a>    tbif.aluop = ALU_SUB;
<a name="85"><q-n>     85  </q-n></a>    tbif.portA = 32'h12;
<a name="86"><q-n>     86  </q-n></a>    tbif.portB = 32'h11;
<a name="87"><q-n>     87  </q-n></a>    #(PERIOD);
<a name="88"><q-n>     88  </q-n></a>
<a name="89"><q-n>     89  </q-n></a>    @(<q-a>posedge</q-w> CLK)
<a name="90"><q-n>     90  </q-n></a>    tb_test_case = <q-l>"SUB, overflow"</q-l>;
<a name="91"><q-n>     91  </q-n></a>    tbif.aluop = ALU_SUB;
<a name="92"><q-n>     92  </q-n></a>    tbif.portA = 32'b00000000000000000000000000000111;
<a name="93"><q-n>     93  </q-n></a>    tbif.portB = 32'b10000000000000000000000000000010;
<a name="94"><q-n>     94  </q-n></a>    #(PERIOD);
<a name="95"><q-n>     95  </q-n></a>
<a name="96"><q-n>     96  </q-n></a>    <q-m>// AND</q-m>
<a name="97"><q-n>     97  </q-n></a>    @(<q-a>posedge</q-w> CLK)
<a name="98"><q-n>     98  </q-n></a>    tb_test_case = <q-l>"AND"</q-l>;
<a name="99"><q-n>     99  </q-n></a>    tbif.aluop = ALU_AND;
<a name="100"><q-n>     100  </q-n></a>    tbif.portA = 32'hff;
<a name="101"><q-n>     101  </q-n></a>    tbif.portB = 32'hf0;
<a name="102"><q-n>     102  </q-n></a>    #(PERIOD);
<a name="103"><q-n>     103  </q-n></a>
<a name="104"><q-n>     104  </q-n></a>    <q-m>// OR</q-m>
<a name="105"><q-n>     105  </q-n></a>    @(<q-a>posedge</q-w> CLK)
<a name="106"><q-n>     106  </q-n></a>    tb_test_case = <q-l>"OR"</q-l>;
<a name="107"><q-n>     107  </q-n></a>    tbif.aluop = ALU_OR;
<a name="108"><q-n>     108  </q-n></a>    tbif.portA = 32'hf0;
<a name="109"><q-n>     109  </q-n></a>    tbif.portB = 32'h0f;
<a name="110"><q-n>     110  </q-n></a>    #(PERIOD);   
<a name="111"><q-n>     111  </q-n></a>
<a name="112"><q-n>     112  </q-n></a>    <q-m>// XOR</q-m>
<a name="113"><q-n>     113  </q-n></a>    @(<q-a>posedge</q-w> CLK)
<a name="114"><q-n>     114  </q-n></a>    tb_test_case = <q-l>"XOR"</q-l>;
<a name="115"><q-n>     115  </q-n></a>    tbif.aluop = ALU_XOR;
<a name="116"><q-n>     116  </q-n></a>    tbif.portA = 32'hff;
<a name="117"><q-n>     117  </q-n></a>    tbif.portB = 32'hf0; <q-m>//output: 32'hf</q-m>
<a name="118"><q-n>     118  </q-n></a>    #(PERIOD);
<a name="119"><q-n>     119  </q-n></a>
<a name="120"><q-n>     120  </q-n></a>    <q-m>// NOR</q-m>
<a name="121"><q-n>     121  </q-n></a>    @(<q-a>posedge</q-w> CLK)
<a name="122"><q-n>     122  </q-n></a>    tb_test_case = <q-l>"NOR, zero flag"</q-l>;
<a name="123"><q-n>     123  </q-n></a>    tbif.aluop = ALU_NOR;
<a name="124"><q-n>     124  </q-n></a>    tbif.portA = 32'hf0f0f0f0;
<a name="125"><q-n>     125  </q-n></a>    tbif.portB = 32'h0f0f0f0f;
<a name="126"><q-n>     126  </q-n></a>    #(PERIOD);
<a name="127"><q-n>     127  </q-n></a>
<a name="128"><q-n>     128  </q-n></a>    <q-m>// SLT</q-m>
<a name="129"><q-n>     129  </q-n></a>    @(<q-a>posedge</q-w> CLK)
<a name="130"><q-n>     130  </q-n></a>    tb_test_case = <q-l>"SLT, zeroflag"</q-l>;
<a name="131"><q-n>     131  </q-n></a>    tbif.aluop = ALU_SLT;
<a name="132"><q-n>     132  </q-n></a>    tbif.portA = 32'hf0;
<a name="133"><q-n>     133  </q-n></a>    tbif.portB = 32'h0f; <q-m>//output: 0</q-m>
<a name="134"><q-n>     134  </q-n></a>    #(PERIOD);   
<a name="135"><q-n>     135  </q-n></a>
<a name="136"><q-n>     136  </q-n></a>    <q-m>// SLTU</q-m>
<a name="137"><q-n>     137  </q-n></a>    @(<q-a>posedge</q-w> CLK)
<a name="138"><q-n>     138  </q-n></a>    tb_test_case = <q-l>"SLTU"</q-l>;
<a name="139"><q-n>     139  </q-n></a>    tbif.aluop = ALU_SLTU;
<a name="140"><q-n>     140  </q-n></a>    tbif.portA = 32'hfffffffe;
<a name="141"><q-n>     141  </q-n></a>    tbif.portB = 32'hffffffff; <q-m>//output: 1</q-m>
<a name="142"><q-n>     142  </q-n></a>    #(PERIOD);   
<a name="143"><q-n>     143  </q-n></a>        
<a name="144"><q-n>     144  </q-n></a>    <q-w>end</q-w>
<a name="145"><q-n>     145  </q-n></a>
<a name="146"><q-n>     146  </q-n></a><q-w>endprogram</q-w></pre>
</tt>

  
</body>
</html>
